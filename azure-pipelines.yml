# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8d0eba92-408e-4dcb-9540-400b1c904c11'
  imageRepositoryProd: 'production'
  imageRepositoryNginx: 'nginx'
  imageRepositorySpringapp: 'spring-app'
  containerRegistry: 'acrprod0327.azurecr.io'
  azureSubscriptionEndpoint: 'scn-acrprod0331'
  dockerfilePathNginx: '$(Build.SourcesDirectory)/Dockerfile-nginx'
  dockerfilePathApp: '$(Build.SourcesDirectory)/Dockerfile-app'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build and Push
    pool:
      vmImage: $(vmImageName)
    steps:
    # Dockerfile 명령으로 Jar 이미지 빌드
    - task: Docker@2
      displayName: Build Jar image
      inputs:
        command: build
        repository: $(imageRepositorySpringapp)
        Dockerfile: $(dockerfilePathApp)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
    # Dockerfile 명령으로 Nginx 이미지 빌드
    - task: Docker@2
      displayName: Build Nginx image
      inputs:
        command: build
        repository: $(imageRepositoryNginx)
        Dockerfile: $(dockerfilePathNginx)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tags)

    # Docker Compose 파일 명령으로 Nginx 이미지 가져와서 Spring App 이미지와 함께 ACR 이미지 푸시하기
    - task: DockerCompose@0
      displayName: Run a Docker Compose command
      inputs:
        action: Run a Docker Compose command
        containerregistrytype: 'Azure Container Registry'
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
        qualifyImageNames: true
        additionalImageTags: $(tag)
    
    - task: DockerCompose@0
      displayName: Push ACR Image
      inputs:
        action: Push services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.yml'
        projectName: $(imageRepositoryProd)
        qualifyImageNames: true
        additionalImageTags: $(tag)

